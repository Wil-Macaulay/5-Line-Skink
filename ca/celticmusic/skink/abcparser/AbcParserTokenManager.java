/* Generated By:JavaCC: Do not edit this line. AbcParserTokenManager.java */
package ca.celticmusic.skink.abcparser;
import java.io.*;
import ca.celticmusic.skink.*;

/** Token Manager. */
public class AbcParserTokenManager implements AbcParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_12(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x200000000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 37;
         }
         if ((active1 & 0x800000000000000L) != 0L)
            return 63;
         if ((active1 & 0x440000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 30;
         }
         if ((active1 & 0xc000000000L) != 0L)
            return 64;
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 45;
         }
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 56;
         }
         return -1;
      case 1:
         if ((active1 & 0x200440000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 1;
            return 30;
         }
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 1;
            return 44;
         }
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 1;
            return 61;
         }
         return -1;
      case 2:
         if ((active1 & 0x200650000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 2;
            return 30;
         }
         return -1;
      case 3:
         if ((active1 & 0x200600000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 3;
            return 30;
         }
         if ((active1 & 0x50000000000L) != 0L)
            return 30;
         return -1;
      case 4:
         if ((active1 & 0x200000000000000L) != 0L)
            return 30;
         if ((active1 & 0x600000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 4;
            return 30;
         }
         return -1;
      case 5:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 5;
            return 30;
         }
         if ((active1 & 0x400000000000L) != 0L)
            return 30;
         return -1;
      case 6:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 6;
            return 30;
         }
         return -1;
      case 7:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 7;
            return 30;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_12(int pos, long active0, long active1)
{
   return jjMoveNfa_12(jjStopStringLiteralDfa_12(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_12()
{
   switch(curChar)
   {
      case 9:
         return jjStartNfaWithStates_12(0, 103, 64);
      case 32:
         return jjStartNfaWithStates_12(0, 102, 64);
      case 45:
         return jjStartNfaWithStates_12(0, 123, 63);
      case 61:
         return jjStopAtPos(0, 105);
      case 93:
         return jjStopAtPos(0, 116);
      case 99:
         return jjMoveStringLiteralDfa1_12(0x40000000000L);
      case 109:
         return jjMoveStringLiteralDfa1_12(0x400000000000L);
      case 110:
         return jjMoveStringLiteralDfa1_12(0x10000000000L);
      case 115:
         return jjMoveStringLiteralDfa1_12(0x200000000000000L);
      case 116:
         return jjMoveStringLiteralDfa1_12(0x200000000000L);
      default :
         return jjMoveNfa_12(8, 0);
   }
}
private int jjMoveStringLiteralDfa1_12(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_12(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa2_12(active1, 0x400000000000L);
      case 108:
         return jjMoveStringLiteralDfa2_12(active1, 0x40000000000L);
      case 111:
         return jjMoveStringLiteralDfa2_12(active1, 0x10000000000L);
      case 114:
         return jjMoveStringLiteralDfa2_12(active1, 0x200000000000L);
      case 116:
         return jjMoveStringLiteralDfa2_12(active1, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_12(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_12(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_12(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_12(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_12(active1, 0x200000000000L);
      case 100:
         return jjMoveStringLiteralDfa3_12(active1, 0x400000000000L);
      case 101:
         return jjMoveStringLiteralDfa3_12(active1, 0x200040000000000L);
      case 110:
         return jjMoveStringLiteralDfa3_12(active1, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_12(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_12(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_12(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_12(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa4_12(active1, 0x400000000000L);
      case 101:
         if ((active1 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_12(3, 104, 30);
         break;
      case 102:
         if ((active1 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_12(3, 106, 30);
         break;
      case 109:
         return jjMoveStringLiteralDfa4_12(active1, 0x200000000000000L);
      case 110:
         return jjMoveStringLiteralDfa4_12(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_12(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_12(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_12(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_12(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa5_12(active1, 0x400000000000L);
      case 115:
         if ((active1 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_12(4, 121, 30);
         return jjMoveStringLiteralDfa5_12(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_12(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_12(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_12(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_12(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_12(5, 110, 30);
         break;
      case 112:
         return jjMoveStringLiteralDfa6_12(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_12(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_12(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_12(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_12(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa7_12(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_12(5, 0L, active1);
}
private int jjMoveStringLiteralDfa7_12(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_12(5, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_12(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa8_12(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_12(6, 0L, active1);
}
private int jjMoveStringLiteralDfa8_12(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_12(6, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_12(7, 0L, active1);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_12(8, 109, 30);
         break;
      default :
         break;
   }
   return jjStartNfa_12(7, 0L, active1);
}
private int jjStartNfaWithStates_12(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_12(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_12(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 63;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 56:
               case 30:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 44:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 45:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 61:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 37:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 64:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(52, 3);
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(4);
                  }
                  else if (curChar == 10)
                     jjCheckNAddTwoStates(1, 2);
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(51, 0);
                  break;
               case 63:
                  if ((0xdfffffdefffff9ffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(30);
                  }
                  if (curChar == 56)
                  {
                     if (kind > 108)
                        kind = 108;
                  }
                  break;
               case 8:
                  if ((0xdfffffdefffff9ffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(30);
                  }
                  else if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(4);
                  }
                  else if (curChar == 10)
                     jjCheckNAddTwoStates(1, 2);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 124)
                        kind = 124;
                     jjCheckNAdd(26);
                  }
                  else if (curChar == 34)
                     jjCheckNAdd(28);
                  else if (curChar == 45)
                     jjCheckNAdd(17);
                  else if (curChar == 43)
                     jjCheckNAdd(17);
                  break;
               case 0:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 1:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 3:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(4);
                  break;
               case 4:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(4);
                  break;
               case 17:
                  if (curChar == 56 && kind > 108)
                     kind = 108;
                  break;
               case 18:
                  if (curChar == 43)
                     jjCheckNAdd(17);
                  break;
               case 19:
                  if (curChar == 45)
                     jjCheckNAdd(17);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 124)
                     kind = 124;
                  jjCheckNAdd(26);
                  break;
               case 27:
                  if (curChar == 34)
                     jjCheckNAdd(28);
                  break;
               case 28:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(28, 29);
                  break;
               case 29:
                  if (curChar == 34 && kind > 125)
                     kind = 125;
                  break;
               case 50:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 51:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(51, 0);
                  break;
               case 52:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(52, 3);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 56:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(30);
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 61;
                  else if (curChar == 109)
                  {
                     if (kind > 119)
                        kind = 119;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 44:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(30);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(30);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 61:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(30);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 37:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(30);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 38;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 63:
               case 30:
                  if ((0xffffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 8:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(30);
                  }
                  if (curChar == 110)
                     jjAddStates(4, 6);
                  else if (curChar == 116)
                     jjAddStates(7, 8);
                  else if (curChar == 115)
                     jjAddStates(9, 10);
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 20;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 15;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 11;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 4:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 5:
                  if (curChar == 115 && kind > 107)
                     kind = 107;
                  break;
               case 6:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 9:
                  if (curChar == 111 && kind > 107)
                     kind = 107;
                  break;
               case 10:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 99 && kind > 107)
                     kind = 107;
                  break;
               case 14:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 20:
                  if (curChar == 112 && kind > 122)
                     kind = 122;
                  break;
               case 21:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 110 && kind > 122)
                     kind = 122;
                  break;
               case 23:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 28:
                  jjAddStates(11, 12);
                  break;
               case 31:
                  if (curChar == 115)
                     jjAddStates(9, 10);
                  break;
               case 32:
                  if (curChar == 101 && kind > 120)
                     kind = 120;
                  break;
               case 33:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 38:
                  if (curChar == 109 && kind > 120)
                     kind = 120;
                  break;
               case 39:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 116)
                     jjAddStates(7, 8);
                  break;
               case 41:
                  if (curChar == 101 && kind > 107)
                     kind = 107;
                  break;
               case 42:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 46:
                  if (curChar == 114 && kind > 107)
                     kind = 107;
                  break;
               case 47:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 53:
                  if (curChar == 110)
                     jjAddStates(4, 6);
                  break;
               case 54:
                  if (curChar == 101 && kind > 119)
                     kind = 119;
                  break;
               case 55:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 57:
                  if (curChar == 109 && kind > 119)
                     kind = 119;
                  break;
               case 58:
                  if (curChar == 108 && kind > 122)
                     kind = 122;
                  break;
               case 59:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 62:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 56:
               case 30:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 44:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 45:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 61:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 37:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 63:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 8:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(30);
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 28:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(11, 12);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 63 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_6(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x410000000L) != 0L)
            return 16;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_6(int pos, long active0, long active1)
{
   return jjMoveNfa_6(jjStopStringLiteralDfa_6(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_6()
{
   switch(curChar)
   {
      case 42:
         return jjStopAtPos(0, 95);
      case 45:
         return jjStopAtPos(0, 93);
      case 92:
         jjmatchedKind = 98;
         return jjMoveStringLiteralDfa1_6(0x10000000L);
      case 95:
         return jjStopAtPos(0, 94);
      case 124:
         return jjStopAtPos(0, 91);
      case 126:
         return jjStopAtPos(0, 96);
      default :
         return jjMoveNfa_6(2, 0);
   }
}
private int jjMoveStringLiteralDfa1_6(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 45:
         if ((active1 & 0x10000000L) != 0L)
            return jjStopAtPos(1, 92);
         break;
      default :
         break;
   }
   return jjStartNfa_6(0, 0L, active1);
}
private int jjMoveNfa_6(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 16;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((0xffffdbfefffff9ffL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     jjCheckNAdd(5);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAddStates(13, 19);
                  }
                  else if (curChar == 10)
                  {
                     if (kind > 90)
                        kind = 90;
                     jjCheckNAddTwoStates(9, 10);
                  }
                  if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  break;
               case 16:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(3, 4);
                  else if (curChar == 10)
                  {
                     if (kind > 97)
                        kind = 97;
                  }
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 3:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 4:
                  if (curChar == 10 && kind > 97)
                     kind = 97;
                  break;
               case 5:
                  if ((0xffffdbfefffff9ffL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjCheckNAdd(5);
                  break;
               case 6:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(13, 19);
                  break;
               case 7:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(7, 8);
                  break;
               case 8:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(9, 10);
                  break;
               case 9:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(9, 10);
                  break;
               case 10:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 11:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(11, 0);
                  break;
               case 12:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(12, 13);
                  break;
               case 13:
                  if (curChar == 10 && kind > 90)
                     kind = 90;
                  break;
               case 14:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(14);
                  break;
               case 15:
                  if (curChar != 10)
                     break;
                  if (kind > 90)
                     kind = 90;
                  jjCheckNAddTwoStates(9, 10);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((0xafffffff6fffffffL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     jjCheckNAdd(5);
                  }
                  else if (curChar == 92)
                     jjAddStates(20, 21);
                  break;
               case 1:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 5:
                  if ((0xafffffff6fffffffL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
               case 5:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjCheckNAdd(5);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 16 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 114;
            return 42;
         }
         if ((active1 & 0xc000000000L) != 0L)
            return 88;
         if ((active1 & 0x200000000000L) != 0L)
            return 74;
         if ((active1 & 0x400000000000L) != 0L)
         {
            jjmatchedKind = 113;
            return 44;
         }
         return -1;
      case 1:
         if ((active1 & 0x200000000000L) != 0L)
            return 73;
         if ((active1 & 0x40000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 0;
            }
            return -1;
         }
         if ((active1 & 0x400000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 113;
               jjmatchedPos = 0;
            }
            return 49;
         }
         return -1;
      case 2:
         if ((active1 & 0x40000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 0;
            }
            return -1;
         }
         if ((active1 & 0x400000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 113;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 3:
         if ((active1 & 0x40000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 0;
            }
            return -1;
         }
         if ((active1 & 0x400000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 113;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 4:
         if ((active1 & 0x400000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 113;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 5:
         if ((active1 & 0x400000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 113;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0, long active1)
{
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      case 9:
         return jjStartNfaWithStates_3(0, 103, 88);
      case 32:
         return jjStartNfaWithStates_3(0, 102, 88);
      case 61:
         return jjStopAtPos(0, 105);
      case 72:
         return jjMoveStringLiteralDfa1_3(0x1800000000000L);
      case 99:
         return jjMoveStringLiteralDfa1_3(0x40000000000L);
      case 109:
         return jjMoveStringLiteralDfa1_3(0x400000000000L);
      case 110:
         return jjMoveStringLiteralDfa1_3(0x10000000000L);
      case 116:
         return jjMoveStringLiteralDfa1_3(0x200000000000L);
      default :
         return jjMoveNfa_3(5, 0);
   }
}
private int jjMoveStringLiteralDfa1_3(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 80:
         if ((active1 & 0x800000000000L) != 0L)
            return jjStopAtPos(1, 111);
         break;
      case 105:
         return jjMoveStringLiteralDfa2_3(active1, 0x400000000000L);
      case 108:
         return jjMoveStringLiteralDfa2_3(active1, 0x40000000000L);
      case 111:
         return jjMoveStringLiteralDfa2_3(active1, 0x10000000000L);
      case 112:
         if ((active1 & 0x1000000000000L) != 0L)
            return jjStopAtPos(1, 112);
         break;
      case 114:
         return jjMoveStringLiteralDfa2_3(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_3(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_3(active1, 0x200000000000L);
      case 100:
         return jjMoveStringLiteralDfa3_3(active1, 0x400000000000L);
      case 101:
         return jjMoveStringLiteralDfa3_3(active1, 0x40000000000L);
      case 110:
         return jjMoveStringLiteralDfa3_3(active1, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_3(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa4_3(active1, 0x400000000000L);
      case 101:
         if ((active1 & 0x10000000000L) != 0L)
            return jjStopAtPos(3, 104);
         break;
      case 102:
         if ((active1 & 0x40000000000L) != 0L)
            return jjStopAtPos(3, 106);
         break;
      case 110:
         return jjMoveStringLiteralDfa4_3(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_3(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa5_3(active1, 0x400000000000L);
      case 115:
         return jjMoveStringLiteralDfa5_3(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_3(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x400000000000L) != 0L)
            return jjStopAtPos(5, 110);
         break;
      case 112:
         return jjMoveStringLiteralDfa6_3(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_3(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa7_3(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_3(5, 0L, active1);
}
private int jjMoveStringLiteralDfa7_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(5, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa8_3(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_3(6, 0L, active1);
}
private int jjMoveStringLiteralDfa8_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(6, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(7, 0L, active1);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x200000000000L) != 0L)
            return jjStopAtPos(8, 109);
         break;
      default :
         break;
   }
   return jjStartNfa_3(7, 0L, active1);
}
private int jjStartNfaWithStates_3(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_3(state, pos + 1);
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 88;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(22, 27);
                  else if (curChar == 10)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAddTwoStates(82, 83);
                  }
                  else if (curChar == 45)
                     jjCheckNAdd(14);
                  else if (curChar == 43)
                     jjCheckNAdd(14);
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  break;
               case 88:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(85, 86);
                  else if (curChar == 10)
                  {
                     if (kind > 115)
                        kind = 115;
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(84, 0);
                  else if (curChar == 10)
                     jjCheckNAddTwoStates(82, 83);
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(80, 81);
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 14:
                  if (curChar == 56 && kind > 108)
                     kind = 108;
                  break;
               case 15:
                  if (curChar == 43)
                     jjCheckNAdd(14);
                  break;
               case 16:
                  if (curChar == 45)
                     jjCheckNAdd(14);
                  break;
               case 42:
                  if (curChar == 35 && kind > 114)
                     kind = 114;
                  break;
               case 79:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(22, 27);
                  break;
               case 80:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(80, 81);
                  break;
               case 81:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(82, 83);
                  break;
               case 82:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(82, 83);
                  break;
               case 83:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 84:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(84, 0);
                  break;
               case 85:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(85, 86);
                  break;
               case 86:
                  if (curChar == 10 && kind > 115)
                     kind = 115;
                  break;
               case 87:
                  if (curChar != 10)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAddTwoStates(82, 83);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 44:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 5:
                  if ((0xfe000000feL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     jjstateSet[jjnewStateCnt++] = 42;
                  }
                  else if ((0x100000001000L & l) != 0L)
                     jjAddStates(28, 29);
                  else if ((0x200000002000L & l) != 0L)
                  {
                     if (kind > 113)
                        kind = 113;
                     jjAddStates(30, 32);
                  }
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 116)
                     jjAddStates(33, 34);
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 74:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 77;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 49:
                  if ((0x400000004000L & l) != 0L)
                  {
                     if (kind > 113)
                        kind = 113;
                     jjstateSet[jjnewStateCnt++] = 58;
                  }
                  else if ((0x100000001000000L & l) != 0L)
                  {
                     if (kind > 113)
                        kind = 113;
                     jjstateSet[jjnewStateCnt++] = 50;
                  }
                  break;
               case 1:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 2:
                  if (curChar == 115 && kind > 107)
                     kind = 107;
                  break;
               case 3:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (curChar == 111 && kind > 107)
                     kind = 107;
                  break;
               case 7:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 99 && kind > 107)
                     kind = 107;
                  break;
               case 11:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 17:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x400000004000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
               case 27:
               case 34:
               case 40:
               case 55:
               case 63:
               case 68:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(22);
                  break;
               case 22:
                  if ((0x400000004000L & l) != 0L && kind > 113)
                     kind = 113;
                  break;
               case 23:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 24:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 25:
                  if ((0x4000000040000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 26:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 28:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 30:
                  if ((0x4000000040000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 32:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 35:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 37:
                  if ((0x800000008000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 39:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 41:
                  if ((0xfe000000feL & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 42:
                  if (curChar == 98 && kind > 114)
                     kind = 114;
                  break;
               case 43:
                  if ((0x200000002000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjAddStates(30, 32);
                  break;
               case 45:
                  if ((0x40000000400L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 46:
               case 58:
                  if ((0x800000008000L & l) != 0L)
                     jjCheckNAdd(47);
                  break;
               case 47:
                  if ((0x4000000040000L & l) != 0L && kind > 113)
                     kind = 113;
                  break;
               case 48:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 50:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 51:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 52:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 56:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 57:
                  if ((0x400000004000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 59:
                  if ((0x100000001000L & l) != 0L)
                     jjAddStates(28, 29);
                  break;
               case 60:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x1000000010L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 64:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0x800000008L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 66:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 67:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 69:
                  if (curChar == 116)
                     jjAddStates(33, 34);
                  break;
               case 70:
                  if (curChar == 101 && kind > 107)
                     kind = 107;
                  break;
               case 71:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 75:
                  if (curChar == 114 && kind > 107)
                     kind = 107;
                  break;
               case 76:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 88 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_5(int pos, long active0, long active1, long active2)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_5(int pos, long active0, long active1, long active2)
{
   return jjMoveNfa_5(jjStopStringLiteralDfa_5(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_5()
{
   switch(curChar)
   {
      case 93:
         return jjStopAtPos(0, 130);
      default :
         return jjMoveNfa_5(3, 0);
   }
}
private int jjMoveNfa_5(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 12;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(2);
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(35, 40);
                  else if (curChar == 10)
                  {
                     if (kind > 11)
                        kind = 11;
                     jjCheckNAddTwoStates(6, 7);
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(2);
                  break;
               case 4:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 5:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(6, 7);
                  break;
               case 6:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(6, 7);
                  break;
               case 7:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 8:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(8, 0);
                  break;
               case 9:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(9, 10);
                  break;
               case 10:
                  if (curChar == 10 && kind > 11)
                     kind = 11;
                  break;
               case 11:
                  if (curChar != 10)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
               case 2:
                  if ((0xffffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(2);
                  break;
               case 1:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
               case 2:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(2);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 12 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_11(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 59;
         }
         if ((active1 & 0xc000000000L) != 0L)
            return 66;
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 42;
         }
         if ((active1 & 0x800000000000000L) != 0L)
            return 67;
         if ((active1 & 0x200000000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 34;
         }
         if ((active1 & 0x440000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 27;
         }
         return -1;
      case 1:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 1;
            return 41;
         }
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 1;
            return 64;
         }
         if ((active1 & 0x200440000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 1;
            return 27;
         }
         return -1;
      case 2:
         if ((active1 & 0x200650000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 2;
            return 27;
         }
         return -1;
      case 3:
         if ((active1 & 0x200600000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 3;
            return 27;
         }
         if ((active1 & 0x50000000000L) != 0L)
            return 27;
         return -1;
      case 4:
         if ((active1 & 0x200000000000000L) != 0L)
            return 27;
         if ((active1 & 0x600000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 4;
            return 27;
         }
         return -1;
      case 5:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 5;
            return 27;
         }
         if ((active1 & 0x400000000000L) != 0L)
            return 27;
         return -1;
      case 6:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 6;
            return 27;
         }
         return -1;
      case 7:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 7;
            return 27;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_11(int pos, long active0, long active1)
{
   return jjMoveNfa_11(jjStopStringLiteralDfa_11(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_11()
{
   switch(curChar)
   {
      case 9:
         return jjStartNfaWithStates_11(0, 103, 66);
      case 32:
         return jjStartNfaWithStates_11(0, 102, 66);
      case 45:
         return jjStartNfaWithStates_11(0, 123, 67);
      case 61:
         return jjStopAtPos(0, 105);
      case 99:
         return jjMoveStringLiteralDfa1_11(0x40000000000L);
      case 109:
         return jjMoveStringLiteralDfa1_11(0x400000000000L);
      case 110:
         return jjMoveStringLiteralDfa1_11(0x10000000000L);
      case 115:
         return jjMoveStringLiteralDfa1_11(0x200000000000000L);
      case 116:
         return jjMoveStringLiteralDfa1_11(0x200000000000L);
      default :
         return jjMoveNfa_11(5, 0);
   }
}
private int jjMoveStringLiteralDfa1_11(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa2_11(active1, 0x400000000000L);
      case 108:
         return jjMoveStringLiteralDfa2_11(active1, 0x40000000000L);
      case 111:
         return jjMoveStringLiteralDfa2_11(active1, 0x10000000000L);
      case 114:
         return jjMoveStringLiteralDfa2_11(active1, 0x200000000000L);
      case 116:
         return jjMoveStringLiteralDfa2_11(active1, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_11(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_11(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_11(active1, 0x200000000000L);
      case 100:
         return jjMoveStringLiteralDfa3_11(active1, 0x400000000000L);
      case 101:
         return jjMoveStringLiteralDfa3_11(active1, 0x200040000000000L);
      case 110:
         return jjMoveStringLiteralDfa3_11(active1, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_11(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_11(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa4_11(active1, 0x400000000000L);
      case 101:
         if ((active1 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_11(3, 104, 27);
         break;
      case 102:
         if ((active1 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_11(3, 106, 27);
         break;
      case 109:
         return jjMoveStringLiteralDfa4_11(active1, 0x200000000000000L);
      case 110:
         return jjMoveStringLiteralDfa4_11(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_11(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_11(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa5_11(active1, 0x400000000000L);
      case 115:
         if ((active1 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_11(4, 121, 27);
         return jjMoveStringLiteralDfa5_11(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_11(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_11(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_11(5, 110, 27);
         break;
      case 112:
         return jjMoveStringLiteralDfa6_11(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_11(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_11(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa7_11(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_11(5, 0L, active1);
}
private int jjMoveStringLiteralDfa7_11(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(5, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa8_11(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_11(6, 0L, active1);
}
private int jjMoveStringLiteralDfa8_11(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(6, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(7, 0L, active1);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_11(8, 109, 27);
         break;
      default :
         break;
   }
   return jjStartNfa_11(7, 0L, active1);
}
private int jjStartNfaWithStates_11(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_11(state, pos + 1);
}
private int jjMoveNfa_11(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 66;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 34:
               case 27:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 59:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 66:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(53, 54);
                  else if (curChar == 10)
                  {
                     if (kind > 118)
                        kind = 118;
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(52, 0);
                  else if (curChar == 10)
                     jjCheckNAddTwoStates(50, 51);
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 64:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 41:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 67:
                  if ((0xdfffffdefffff9ffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 56)
                  {
                     if (kind > 108)
                        kind = 108;
                  }
                  break;
               case 42:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 5:
                  if ((0xdfffffdefffff9ffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  else if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(41, 46);
                  else if (curChar == 10)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAddTwoStates(50, 51);
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 124)
                        kind = 124;
                     jjCheckNAdd(23);
                  }
                  else if (curChar == 34)
                     jjCheckNAdd(25);
                  else if (curChar == 45)
                     jjCheckNAdd(14);
                  else if (curChar == 43)
                     jjCheckNAdd(14);
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 14:
                  if (curChar == 56 && kind > 108)
                     kind = 108;
                  break;
               case 15:
                  if (curChar == 43)
                     jjCheckNAdd(14);
                  break;
               case 16:
                  if (curChar == 45)
                     jjCheckNAdd(14);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 124)
                     kind = 124;
                  jjCheckNAdd(23);
                  break;
               case 24:
                  if (curChar == 34)
                     jjCheckNAdd(25);
                  break;
               case 25:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(25, 26);
                  break;
               case 26:
                  if (curChar == 34 && kind > 125)
                     kind = 125;
                  break;
               case 47:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(41, 46);
                  break;
               case 48:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(50, 51);
                  break;
               case 50:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(50, 51);
                  break;
               case 51:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 52:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(52, 0);
                  break;
               case 53:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(53, 54);
                  break;
               case 54:
                  if (curChar == 10 && kind > 118)
                     kind = 118;
                  break;
               case 55:
                  if (curChar != 10)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAddTwoStates(50, 51);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 34:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 59:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 64;
                  else if (curChar == 109)
                  {
                     if (kind > 119)
                        kind = 119;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 64:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 41:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 67:
               case 27:
                  if ((0xffffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 42:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 5:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 110)
                     jjAddStates(47, 49);
                  else if (curChar == 116)
                     jjAddStates(50, 51);
                  else if (curChar == 115)
                     jjAddStates(52, 53);
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 1:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 2:
                  if (curChar == 115 && kind > 107)
                     kind = 107;
                  break;
               case 3:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (curChar == 111 && kind > 107)
                     kind = 107;
                  break;
               case 7:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 99 && kind > 107)
                     kind = 107;
                  break;
               case 11:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 17:
                  if (curChar == 112 && kind > 122)
                     kind = 122;
                  break;
               case 18:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 110 && kind > 122)
                     kind = 122;
                  break;
               case 20:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 25:
                  jjAddStates(54, 55);
                  break;
               case 28:
                  if (curChar == 115)
                     jjAddStates(52, 53);
                  break;
               case 29:
                  if (curChar == 101 && kind > 120)
                     kind = 120;
                  break;
               case 30:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 35:
                  if (curChar == 109 && kind > 120)
                     kind = 120;
                  break;
               case 36:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 116)
                     jjAddStates(50, 51);
                  break;
               case 38:
                  if (curChar == 101 && kind > 107)
                     kind = 107;
                  break;
               case 39:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 43:
                  if (curChar == 114 && kind > 107)
                     kind = 107;
                  break;
               case 44:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 56:
                  if (curChar == 110)
                     jjAddStates(47, 49);
                  break;
               case 57:
                  if (curChar == 101 && kind > 119)
                     kind = 119;
                  break;
               case 58:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 60:
                  if (curChar == 109 && kind > 119)
                     kind = 119;
                  break;
               case 61:
                  if (curChar == 108 && kind > 122)
                     kind = 122;
                  break;
               case 62:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 65:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 34:
               case 27:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 59:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 64:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 41:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 67:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 42:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 5:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 25:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(54, 55);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 66 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_8()
{
   return jjMoveNfa_8(3, 0);
}
private int jjMoveNfa_8(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 12;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
                  if ((0xffffffdffffffbffL & l) != 0L)
                  {
                     if (kind > 88)
                        kind = 88;
                     jjCheckNAdd(2);
                  }
                  else if (curChar == 10)
                  {
                     if (kind > 89)
                        kind = 89;
                     jjCheckNAddTwoStates(6, 7);
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(35, 40);
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAdd(2);
                  break;
               case 4:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 5:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(6, 7);
                  break;
               case 6:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(6, 7);
                  break;
               case 7:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 8:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(8, 0);
                  break;
               case 9:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(9, 10);
                  break;
               case 10:
                  if (curChar == 10 && kind > 89)
                     kind = 89;
                  break;
               case 11:
                  if (curChar != 10)
                     break;
                  if (kind > 89)
                     kind = 89;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
               case 2:
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAdd(2);
                  break;
               case 1:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
               case 2:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjCheckNAdd(2);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 12 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x3638000000000L) != 0L)
         {
            jjmatchedKind = 66;
            return -1;
         }
         if ((active0 & 0x8000000000000000L) != 0L)
            return 37;
         if ((active0 & 0x20000000000000L) != 0L)
            return 31;
         if ((active0 & 0x49c0000000000L) != 0L)
            return 68;
         return -1;
      case 1:
         if ((active0 & 0x3638000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 66;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0, long active1)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 33:
         return jjStartNfaWithStates_1(0, 63, 37);
      case 39:
         return jjStopAtPos(0, 27);
      case 40:
         return jjStopAtPos(0, 52);
      case 41:
         return jjStopAtPos(0, 56);
      case 42:
         return jjStopAtPos(0, 64);
      case 43:
         return jjStopAtPos(0, 57);
      case 44:
         return jjStopAtPos(0, 28);
      case 45:
         return jjStopAtPos(0, 18);
      case 47:
         jjmatchedKind = 14;
         return jjMoveStringLiteralDfa1_1(0x20000000L);
      case 58:
         return jjStartNfaWithStates_1(0, 53, 31);
      case 61:
         return jjStopAtPos(0, 13);
      case 75:
         return jjMoveStringLiteralDfa1_1(0x8000000000L);
      case 76:
         return jjMoveStringLiteralDfa1_1(0x400000000000L);
      case 77:
         return jjMoveStringLiteralDfa1_1(0x10000000000L);
      case 80:
         return jjMoveStringLiteralDfa1_1(0x1000000000000L);
      case 81:
         return jjMoveStringLiteralDfa1_1(0x200000000000L);
      case 86:
         return jjMoveStringLiteralDfa1_1(0x20000000000L);
      case 91:
         jjmatchedKind = 50;
         return jjMoveStringLiteralDfa1_1(0x9c0000000000L);
      case 92:
         return jjStopAtPos(0, 65);
      case 93:
         return jjStopAtPos(0, 51);
      case 94:
         jjmatchedKind = 24;
         return jjMoveStringLiteralDfa1_1(0x800000L);
      case 95:
         jjmatchedKind = 26;
         return jjMoveStringLiteralDfa1_1(0x2000000L);
      case 119:
         return jjMoveStringLiteralDfa1_1(0x2000000000000L);
      case 122:
         return jjStopAtPos(0, 17);
      case 123:
         return jjStopAtPos(0, 19);
      case 125:
         return jjStopAtPos(0, 20);
      default :
         return jjMoveNfa_1(2, 0);
   }
}
private int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x20000000L) != 0L)
            return jjStopAtPos(1, 29);
         break;
      case 58:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(1, 39);
         else if ((active0 & 0x10000000000L) != 0L)
            return jjStopAtPos(1, 40);
         else if ((active0 & 0x20000000000L) != 0L)
            return jjStopAtPos(1, 41);
         else if ((active0 & 0x200000000000L) != 0L)
            return jjStopAtPos(1, 45);
         else if ((active0 & 0x400000000000L) != 0L)
            return jjStopAtPos(1, 46);
         else if ((active0 & 0x1000000000000L) != 0L)
            return jjStopAtPos(1, 48);
         else if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(1, 49);
         break;
      case 75:
         return jjMoveStringLiteralDfa2_1(active0, 0x80000000000L);
      case 76:
         return jjMoveStringLiteralDfa2_1(active0, 0x800000000000L);
      case 77:
         return jjMoveStringLiteralDfa2_1(active0, 0x40000000000L);
      case 86:
         return jjMoveStringLiteralDfa2_1(active0, 0x100000000000L);
      case 94:
         if ((active0 & 0x800000L) != 0L)
            return jjStopAtPos(1, 23);
         break;
      case 95:
         if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 25);
         break;
      default :
         break;
   }
   return jjStartNfa_1(0, active0, 0L);
}
private int jjMoveStringLiteralDfa2_1(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(0, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStopAtPos(2, 42);
         else if ((active0 & 0x80000000000L) != 0L)
            return jjStopAtPos(2, 43);
         else if ((active0 & 0x100000000000L) != 0L)
            return jjStopAtPos(2, 44);
         else if ((active0 & 0x800000000000L) != 0L)
            return jjStopAtPos(2, 47);
         break;
      default :
         break;
   }
   return jjStartNfa_1(1, active0, 0L);
}
private int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 68;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 68:
                  if (curChar == 50)
                  {
                     if (kind > 60)
                        kind = 60;
                  }
                  else if (curChar == 49)
                  {
                     if (kind > 60)
                        kind = 60;
                  }
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                  }
                  else if (curChar == 58)
                  {
                     if (kind > 59)
                        kind = 59;
                  }
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     jjCheckNAdd(5);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAddStates(56, 62);
                  }
                  else if (curChar == 58)
                     jjAddStates(63, 68);
                  else if (curChar == 10)
                  {
                     if (kind > 11)
                        kind = 11;
                     jjCheckNAddTwoStates(45, 46);
                  }
                  else if (curChar == 60)
                  {
                     if (kind > 68)
                        kind = 68;
                     jjCheckNAdd(41);
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjCheckNAdd(40);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 66)
                        kind = 66;
                  }
                  else if (curChar == 33)
                     jjCheckNAdd(37);
                  else if (curChar == 34)
                     jjCheckNAdd(34);
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  jjCheckNAdd(5);
                  break;
               case 6:
                  if (curChar != 58)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAdd(7);
                  break;
               case 7:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAdd(7);
                  break;
               case 9:
                  if (curChar != 58)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAdd(10);
                  break;
               case 10:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAdd(10);
                  break;
               case 12:
                  if (curChar != 58)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(13);
                  break;
               case 13:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(13);
                  break;
               case 15:
                  if (curChar != 58)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(16);
                  break;
               case 16:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(16);
                  break;
               case 18:
                  if (curChar != 58)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(19);
                  break;
               case 19:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(19);
                  break;
               case 21:
                  if (curChar != 58)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAdd(22);
                  break;
               case 22:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAdd(22);
                  break;
               case 24:
                  if (curChar != 58)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(25);
                  break;
               case 25:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(25);
                  break;
               case 27:
                  if (curChar != 58)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjCheckNAdd(28);
                  break;
               case 28:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjCheckNAdd(28);
                  break;
               case 30:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 34)
                     jjCheckNAdd(34);
                  break;
               case 34:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(34, 35);
                  break;
               case 35:
                  if (curChar == 34 && kind > 61)
                     kind = 61;
                  break;
               case 36:
                  if (curChar == 33)
                     jjCheckNAdd(37);
                  break;
               case 37:
                  if ((0xfffffffdffffdbffL & l) != 0L)
                     jjCheckNAddTwoStates(37, 38);
                  break;
               case 38:
                  if (curChar == 33 && kind > 62)
                     kind = 62;
                  break;
               case 39:
                  if (curChar == 46 && kind > 66)
                     kind = 66;
                  break;
               case 40:
                  if (curChar != 62)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjCheckNAdd(40);
                  break;
               case 41:
                  if (curChar != 60)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(41);
                  break;
               case 42:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAddStates(56, 62);
                  break;
               case 43:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(43, 44);
                  break;
               case 44:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(45, 46);
                  break;
               case 45:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(45, 46);
                  break;
               case 46:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 47:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(47, 0);
                  break;
               case 48:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if (curChar == 10 && kind > 11)
                     kind = 11;
                  break;
               case 50:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(50);
                  break;
               case 51:
                  if (curChar != 10)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(45, 46);
                  break;
               case 52:
                  if (curChar == 58)
                     jjAddStates(63, 68);
                  break;
               case 53:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 56:
                  if (curChar == 58 && kind > 59)
                     kind = 59;
                  break;
               case 57:
                  if (curChar == 50 && kind > 60)
                     kind = 60;
                  break;
               case 65:
                  if (curChar == 49 && kind > 60)
                     kind = 60;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 68:
               case 64:
                  if (curChar == 124 && kind > 58)
                     kind = 58;
                  break;
               case 31:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 61;
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 59;
                  if (curChar == 124)
                     jjCheckNAdd(57);
                  if (curChar == 124)
                  {
                     if (kind > 59)
                        kind = 59;
                  }
                  break;
               case 2:
                  if ((0x40ffff0007ffff00L & l) != 0L)
                  {
                     if (kind > 66)
                        kind = 66;
                  }
                  else if ((0xfeL & l) != 0L)
                  {
                     if (kind > 16)
                        kind = 16;
                  }
                  else if ((0xfe00000000L & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                  }
                  else if ((0x300000000000000L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 124)
                     jjCheckNAddStates(69, 73);
                  else if (curChar == 91)
                     jjCheckNAddStates(74, 76);
                  if (curChar == 124)
                  {
                     if (kind > 58)
                        kind = 58;
                  }
                  else if (curChar == 90)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 15;
                  else if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 1:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((0xfeL & l) != 0L && kind > 16)
                     kind = 16;
                  break;
               case 4:
                  if ((0x300000000000000L & l) != 0L && kind > 21)
                     kind = 21;
                  break;
               case 7:
                  if (kind > 31)
                     kind = 31;
                  jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 8:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 10:
                  if (kind > 32)
                     kind = 32;
                  jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 11:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 13:
                  if (kind > 33)
                     kind = 33;
                  jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 16:
                  if (kind > 34)
                     kind = 34;
                  jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 19:
                  if (kind > 35)
                     kind = 35;
                  jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 20:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 22:
                  if (kind > 36)
                     kind = 36;
                  jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 23:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 25:
                  if (kind > 37)
                     kind = 37;
                  jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 26:
                  if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 28:
                  if (kind > 38)
                     kind = 38;
                  jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 29:
                  if (curChar == 90)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 32:
                  if (curChar == 124 && kind > 58)
                     kind = 58;
                  break;
               case 34:
                  jjAddStates(77, 78);
                  break;
               case 37:
                  jjAddStates(79, 80);
                  break;
               case 39:
                  if ((0x40ffff0007ffff00L & l) != 0L && kind > 66)
                     kind = 66;
                  break;
               case 55:
                  if (curChar == 124 && kind > 59)
                     kind = 59;
                  break;
               case 58:
                  if (curChar == 124)
                     jjCheckNAdd(57);
                  break;
               case 59:
                  if (curChar == 93)
                     jjCheckNAdd(57);
                  break;
               case 60:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 91)
                     jjCheckNAdd(57);
                  break;
               case 62:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 91)
                     jjCheckNAddStates(74, 76);
                  break;
               case 66:
                  if (curChar == 124)
                     jjCheckNAddStates(69, 73);
                  break;
               case 67:
                  if (curChar == 93 && kind > 58)
                     kind = 58;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 7:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 10:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 13:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 16:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 19:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 22:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 25:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 28:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 34:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(77, 78);
                  break;
               case 37:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(79, 80);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 68 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x40L) != 0L)
         {
            jjmatchedKind = 8;
            return 5;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 88:
         return jjMoveStringLiteralDfa1_0(0x40L);
      default :
         return jjMoveNfa_0(2, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(1, 6);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 12;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((0xffffffffffffdbffL & l) != 0L)
                  {
                     if (kind > 8)
                        kind = 8;
                  }
                  else if (curChar == 10)
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if ((0xffffffffffffdbffL & l) != 0L)
                  {
                     if (kind > 8)
                        kind = 8;
                     jjCheckNAdd(3);
                  }
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(81, 84);
                  else if (curChar == 37)
                  {
                     if (kind > 7)
                        kind = 7;
                     jjCheckNAdd(1);
                  }
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAdd(1);
                  break;
               case 3:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(3);
                  break;
               case 5:
                  if ((0xfbffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(6);
                  break;
               case 6:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(6);
                  break;
               case 7:
                  if ((0xffffffffffffdbffL & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 8:
                  if (curChar == 10 && kind > 11)
                     kind = 11;
                  break;
               case 9:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(81, 84);
                  break;
               case 10:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(10, 0);
                  break;
               case 11:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(11, 8);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if (kind > 8)
                     kind = 8;
                  if ((0xfffffffffeffffffL & l) != 0L)
                  {
                     if (kind > 8)
                        kind = 8;
                     jjCheckNAdd(3);
                  }
                  else if (curChar == 88)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 1:
                  if (kind > 7)
                     kind = 7;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(3);
                  break;
               case 4:
                  if (curChar == 88)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 5:
               case 6:
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(6);
                  break;
               case 7:
                  if (kind > 8)
                     kind = 8;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 8)
                        kind = 8;
                     jjCheckNAdd(3);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 8)
                        kind = 8;
                  }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(3);
                  break;
               case 5:
               case 6:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(6);
                  break;
               case 7:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 8)
                     kind = 8;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 12 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_13(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_13(int pos, long active0)
{
   return jjMoveNfa_13(jjStopStringLiteralDfa_13(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_13()
{
   switch(curChar)
   {
      case 39:
         return jjStopAtPos(0, 27);
      case 43:
         return jjStopAtPos(0, 30);
      case 44:
         return jjStopAtPos(0, 28);
      case 45:
         return jjStopAtPos(0, 18);
      case 47:
         jjmatchedKind = 14;
         return jjMoveStringLiteralDfa1_13(0x20000000L);
      case 61:
         return jjStopAtPos(0, 13);
      case 94:
         jjmatchedKind = 24;
         return jjMoveStringLiteralDfa1_13(0x800000L);
      case 95:
         jjmatchedKind = 26;
         return jjMoveStringLiteralDfa1_13(0x2000000L);
      case 122:
         return jjStopAtPos(0, 17);
      case 123:
         return jjStopAtPos(0, 19);
      case 125:
         return jjStopAtPos(0, 20);
      default :
         return jjMoveNfa_13(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_13(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x20000000L) != 0L)
            return jjStopAtPos(1, 29);
         break;
      case 94:
         if ((active0 & 0x800000L) != 0L)
            return jjStopAtPos(1, 23);
         break;
      case 95:
         if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 25);
         break;
      default :
         break;
   }
   return jjStartNfa_13(0, active0);
}
private int jjMoveNfa_13(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 8;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     jjCheckNAdd(4);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 60)
                  {
                     if (kind > 68)
                        kind = 68;
                     jjCheckNAdd(7);
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjCheckNAdd(6);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 66)
                        kind = 66;
                  }
                  break;
               case 0:
                  if ((0x100000200L & l) == 0L)
                     break;
                  kind = 12;
                  jjCheckNAdd(0);
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 22;
                  jjCheckNAdd(4);
                  break;
               case 5:
                  if (curChar == 46)
                     kind = 66;
                  break;
               case 6:
                  if (curChar != 62)
                     break;
                  kind = 67;
                  jjCheckNAdd(6);
                  break;
               case 7:
                  if (curChar != 60)
                     break;
                  kind = 68;
                  jjCheckNAdd(7);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x40ffff0007ffff00L & l) != 0L)
                  {
                     if (kind > 66)
                        kind = 66;
                  }
                  else if ((0xfeL & l) != 0L)
                  {
                     if (kind > 16)
                        kind = 16;
                  }
                  else if ((0xfe00000000L & l) != 0L)
                  {
                     if (kind > 15)
                        kind = 15;
                  }
                  else if ((0x300000000000000L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  break;
               case 2:
                  if ((0xfeL & l) != 0L)
                     kind = 16;
                  break;
               case 3:
                  if ((0x300000000000000L & l) != 0L)
                     kind = 21;
                  break;
               case 5:
                  if ((0x40ffff0007ffff00L & l) != 0L)
                     kind = 66;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 8 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_9(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x170380L) != 0L)
         {
            jjmatchedKind = 87;
            return 51;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_9(int pos, long active0, long active1)
{
   return jjMoveNfa_9(jjStopStringLiteralDfa_9(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_9()
{
   switch(curChar)
   {
      case 72:
         return jjMoveStringLiteralDfa1_9(0x10000L);
      case 75:
         return jjMoveStringLiteralDfa1_9(0x100L);
      case 76:
         return jjMoveStringLiteralDfa1_9(0x80L);
      case 77:
         return jjMoveStringLiteralDfa1_9(0x200L);
      case 80:
         return jjMoveStringLiteralDfa1_9(0x40000L);
      case 81:
         return jjMoveStringLiteralDfa1_9(0x20000L);
      case 86:
         return jjMoveStringLiteralDfa1_9(0x100000L);
      default :
         return jjMoveNfa_9(4, 0);
   }
}
private int jjMoveStringLiteralDfa1_9(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 58:
         if ((active1 & 0x80L) != 0L)
            return jjStopAtPos(1, 71);
         else if ((active1 & 0x100L) != 0L)
            return jjStopAtPos(1, 72);
         else if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(1, 73);
         else if ((active1 & 0x10000L) != 0L)
            return jjStopAtPos(1, 80);
         else if ((active1 & 0x20000L) != 0L)
            return jjStopAtPos(1, 81);
         else if ((active1 & 0x40000L) != 0L)
            return jjStopAtPos(1, 82);
         else if ((active1 & 0x100000L) != 0L)
            return jjStopAtPos(1, 84);
         break;
      default :
         break;
   }
   return jjStartNfa_9(0, 0L, active1);
}
private int jjMoveNfa_9(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 65;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 4:
                  if ((0xfffffffffffffbffL & l) != 0L)
                  {
                     if (kind > 87)
                        kind = 87;
                  }
                  else if (curChar == 10)
                  {
                     if (kind > 89)
                        kind = 89;
                     jjCheckNAddTwoStates(59, 60);
                  }
                  if ((0xfffffffffffffbffL & l) != 0L)
                  {
                     if (kind > 87)
                        kind = 87;
                     jjCheckNAdd(54);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAdd(26);
                  }
                  else if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(85, 90);
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if (curChar != 58)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAdd(3);
                  break;
               case 3:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAdd(3);
                  break;
               case 5:
                  if (curChar != 58)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAdd(6);
                  break;
               case 6:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAdd(6);
                  break;
               case 8:
                  if (curChar != 58)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(9);
                  break;
               case 9:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(9);
                  break;
               case 11:
                  if (curChar != 58)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(12);
                  break;
               case 12:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(12);
                  break;
               case 14:
                  if (curChar != 58)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(15);
                  break;
               case 15:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(15);
                  break;
               case 17:
                  if (curChar != 58)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAdd(18);
                  break;
               case 18:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAdd(18);
                  break;
               case 20:
                  if (curChar != 58)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(21);
                  break;
               case 21:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(21);
                  break;
               case 23:
                  if (curChar != 58)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjCheckNAdd(24);
                  break;
               case 24:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjCheckNAdd(24);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAdd(26);
                  break;
               case 27:
                  if (curChar != 58)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(28);
                  break;
               case 28:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(28);
                  break;
               case 30:
                  if (curChar != 58)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(31);
                  break;
               case 31:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(31);
                  break;
               case 33:
                  if (curChar != 58)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjCheckNAdd(34);
                  break;
               case 34:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjCheckNAdd(34);
                  break;
               case 36:
                  if (curChar != 58)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(37);
                  break;
               case 37:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(37);
                  break;
               case 39:
                  if (curChar != 58)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAdd(40);
                  break;
               case 40:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAdd(40);
                  break;
               case 42:
                  if (curChar != 58)
                     break;
                  if (kind > 79)
                     kind = 79;
                  jjCheckNAdd(43);
                  break;
               case 43:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 79)
                     kind = 79;
                  jjCheckNAdd(43);
                  break;
               case 45:
                  if (curChar != 58)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAdd(46);
                  break;
               case 46:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAdd(46);
                  break;
               case 49:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0xfbfffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  jjCheckNAdd(52);
                  break;
               case 52:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  jjCheckNAdd(52);
                  break;
               case 53:
               case 54:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  jjCheckNAdd(54);
                  break;
               case 55:
                  if ((0xfffffffffffffbffL & l) != 0L && kind > 87)
                     kind = 87;
                  break;
               case 56:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(85, 90);
                  break;
               case 57:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(57, 58);
                  break;
               case 58:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 59:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 60:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 61:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(61, 0);
                  break;
               case 62:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(62, 63);
                  break;
               case 63:
                  if (curChar == 10 && kind > 89)
                     kind = 89;
                  break;
               case 64:
                  if (curChar != 10)
                     break;
                  if (kind > 89)
                     kind = 89;
                  jjCheckNAddTwoStates(59, 60);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 4:
                  if (kind > 87)
                     kind = 87;
                  if ((0xfffffffff8000001L & l) != 0L)
                  {
                     if (kind > 87)
                        kind = 87;
                     jjCheckNAdd(54);
                  }
                  else if ((0x7fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  if (curChar == 92)
                  {
                     if (kind > 85)
                        kind = 85;
                     jjCheckNAdd(49);
                  }
                  else if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 42;
                  else if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 39;
                  else if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 36;
                  else if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 33;
                  else if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 90)
                     jjstateSet[jjnewStateCnt++] = 23;
                  else if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 20;
                  else if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 14;
                  else if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 11;
                  else if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 5;
                  else if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 1:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (kind > 31)
                     kind = 31;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (kind > 32)
                     kind = 32;
                  jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 7:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 9:
                  if (kind > 33)
                     kind = 33;
                  jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 10:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 12:
                  if (kind > 34)
                     kind = 34;
                  jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 13:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 15:
                  if (kind > 35)
                     kind = 35;
                  jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 16:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 18:
                  if (kind > 36)
                     kind = 36;
                  jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 21:
                  if (kind > 37)
                     kind = 37;
                  jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 22:
                  if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 24:
                  if (kind > 38)
                     kind = 38;
                  jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 25:
                  if (curChar == 90)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 28:
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 29:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 31:
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 32:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 34:
                  if (kind > 76)
                     kind = 76;
                  jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 35:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 37:
                  if (kind > 77)
                     kind = 77;
                  jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 40:
                  if (kind > 78)
                     kind = 78;
                  jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 41:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 43:
                  if (kind > 79)
                     kind = 79;
                  jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 44:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 46:
                  if (kind > 83)
                     kind = 83;
                  jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 47:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 48:
                  if (curChar != 92)
                     break;
                  if (kind > 85)
                     kind = 85;
                  jjCheckNAdd(49);
                  break;
               case 49:
                  if (kind > 85)
                     kind = 85;
                  jjCheckNAdd(49);
                  break;
               case 50:
                  if ((0x7fffffeL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 51:
               case 52:
                  if (kind > 87)
                     kind = 87;
                  jjCheckNAdd(52);
                  break;
               case 53:
                  if ((0xfffffffff8000001L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  jjCheckNAdd(54);
                  break;
               case 54:
                  if (kind > 87)
                     kind = 87;
                  jjCheckNAdd(54);
                  break;
               case 55:
                  if (kind > 87)
                     kind = 87;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 4:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 87)
                        kind = 87;
                     jjCheckNAdd(54);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 87)
                        kind = 87;
                  }
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 9:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 12:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 15:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 18:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 21:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 24:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 28:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 31:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 34:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 37:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 40:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 43:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 79)
                     kind = 79;
                  jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 46:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 49:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
               case 52:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  jjCheckNAdd(52);
                  break;
               case 53:
               case 54:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  jjCheckNAdd(54);
                  break;
               case 55:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 87)
                     kind = 87;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 65 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_10(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 59;
         }
         if ((active1 & 0xc000000000L) != 0L)
            return 66;
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 42;
         }
         if ((active1 & 0x800000000000000L) != 0L)
            return 67;
         if ((active1 & 0x200000000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 34;
         }
         if ((active1 & 0x440000000000L) != 0L)
         {
            jjmatchedKind = 126;
            return 27;
         }
         return -1;
      case 1:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 1;
            return 41;
         }
         if ((active1 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 1;
            return 64;
         }
         if ((active1 & 0x200440000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 1;
            return 27;
         }
         return -1;
      case 2:
         if ((active1 & 0x200650000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 2;
            return 27;
         }
         return -1;
      case 3:
         if ((active1 & 0x200600000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 3;
            return 27;
         }
         if ((active1 & 0x50000000000L) != 0L)
            return 27;
         return -1;
      case 4:
         if ((active1 & 0x200000000000000L) != 0L)
            return 27;
         if ((active1 & 0x600000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 4;
            return 27;
         }
         return -1;
      case 5:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 5;
            return 27;
         }
         if ((active1 & 0x400000000000L) != 0L)
            return 27;
         return -1;
      case 6:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 6;
            return 27;
         }
         return -1;
      case 7:
         if ((active1 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 126;
            jjmatchedPos = 7;
            return 27;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_10(int pos, long active0, long active1)
{
   return jjMoveNfa_10(jjStopStringLiteralDfa_10(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_10()
{
   switch(curChar)
   {
      case 9:
         return jjStartNfaWithStates_10(0, 103, 66);
      case 32:
         return jjStartNfaWithStates_10(0, 102, 66);
      case 45:
         return jjStartNfaWithStates_10(0, 123, 67);
      case 61:
         return jjStopAtPos(0, 105);
      case 99:
         return jjMoveStringLiteralDfa1_10(0x40000000000L);
      case 109:
         return jjMoveStringLiteralDfa1_10(0x400000000000L);
      case 110:
         return jjMoveStringLiteralDfa1_10(0x10000000000L);
      case 115:
         return jjMoveStringLiteralDfa1_10(0x200000000000000L);
      case 116:
         return jjMoveStringLiteralDfa1_10(0x200000000000L);
      default :
         return jjMoveNfa_10(5, 0);
   }
}
private int jjMoveStringLiteralDfa1_10(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa2_10(active1, 0x400000000000L);
      case 108:
         return jjMoveStringLiteralDfa2_10(active1, 0x40000000000L);
      case 111:
         return jjMoveStringLiteralDfa2_10(active1, 0x10000000000L);
      case 114:
         return jjMoveStringLiteralDfa2_10(active1, 0x200000000000L);
      case 116:
         return jjMoveStringLiteralDfa2_10(active1, 0x200000000000000L);
      default :
         break;
   }
   return jjStartNfa_10(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_10(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_10(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_10(active1, 0x200000000000L);
      case 100:
         return jjMoveStringLiteralDfa3_10(active1, 0x400000000000L);
      case 101:
         return jjMoveStringLiteralDfa3_10(active1, 0x200040000000000L);
      case 110:
         return jjMoveStringLiteralDfa3_10(active1, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_10(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_10(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_10(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa4_10(active1, 0x400000000000L);
      case 101:
         if ((active1 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_10(3, 104, 27);
         break;
      case 102:
         if ((active1 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_10(3, 106, 27);
         break;
      case 109:
         return jjMoveStringLiteralDfa4_10(active1, 0x200000000000000L);
      case 110:
         return jjMoveStringLiteralDfa4_10(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_10(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_10(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_10(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa5_10(active1, 0x400000000000L);
      case 115:
         if ((active1 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_10(4, 121, 27);
         return jjMoveStringLiteralDfa5_10(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_10(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_10(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_10(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_10(5, 110, 27);
         break;
      case 112:
         return jjMoveStringLiteralDfa6_10(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_10(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_10(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_10(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa7_10(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_10(5, 0L, active1);
}
private int jjMoveStringLiteralDfa7_10(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_10(5, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa8_10(active1, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_10(6, 0L, active1);
}
private int jjMoveStringLiteralDfa8_10(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_10(6, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(7, 0L, active1);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_10(8, 109, 27);
         break;
      default :
         break;
   }
   return jjStartNfa_10(7, 0L, active1);
}
private int jjStartNfaWithStates_10(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_10(state, pos + 1);
}
private int jjMoveNfa_10(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 66;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 34:
               case 27:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 59:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 66:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(53, 54);
                  else if (curChar == 10)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(52, 0);
                  else if (curChar == 10)
                     jjCheckNAddTwoStates(50, 51);
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 64:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 41:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 67:
                  if ((0xdfffffdefffff9ffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 56)
                  {
                     if (kind > 108)
                        kind = 108;
                  }
                  break;
               case 42:
                  if ((0xdfffffdefffff9ffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 5:
                  if ((0xdfffffdefffff9ffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  else if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(41, 46);
                  else if (curChar == 10)
                  {
                     if (kind > 117)
                        kind = 117;
                     jjCheckNAddTwoStates(50, 51);
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 124)
                        kind = 124;
                     jjCheckNAdd(23);
                  }
                  else if (curChar == 34)
                     jjCheckNAdd(25);
                  else if (curChar == 45)
                     jjCheckNAdd(14);
                  else if (curChar == 43)
                     jjCheckNAdd(14);
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 14:
                  if (curChar == 56 && kind > 108)
                     kind = 108;
                  break;
               case 15:
                  if (curChar == 43)
                     jjCheckNAdd(14);
                  break;
               case 16:
                  if (curChar == 45)
                     jjCheckNAdd(14);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 124)
                     kind = 124;
                  jjCheckNAdd(23);
                  break;
               case 24:
                  if (curChar == 34)
                     jjCheckNAdd(25);
                  break;
               case 25:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(25, 26);
                  break;
               case 26:
                  if (curChar == 34 && kind > 125)
                     kind = 125;
                  break;
               case 47:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(41, 46);
                  break;
               case 48:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(50, 51);
                  break;
               case 50:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(50, 51);
                  break;
               case 51:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 52:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(52, 0);
                  break;
               case 53:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(53, 54);
                  break;
               case 54:
                  if (curChar == 10 && kind > 117)
                     kind = 117;
                  break;
               case 55:
                  if (curChar != 10)
                     break;
                  if (kind > 117)
                     kind = 117;
                  jjCheckNAddTwoStates(50, 51);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 34:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 59:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 64;
                  else if (curChar == 109)
                  {
                     if (kind > 119)
                        kind = 119;
                  }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 64:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 41:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 67:
               case 27:
                  if ((0xffffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 42:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 5:
                  if ((0xffffffffdfffffffL & l) != 0L)
                  {
                     if (kind > 126)
                        kind = 126;
                     jjCheckNAdd(27);
                  }
                  if (curChar == 110)
                     jjAddStates(47, 49);
                  else if (curChar == 116)
                     jjAddStates(50, 51);
                  else if (curChar == 115)
                     jjAddStates(52, 53);
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 1:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 2:
                  if (curChar == 115 && kind > 107)
                     kind = 107;
                  break;
               case 3:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (curChar == 111 && kind > 107)
                     kind = 107;
                  break;
               case 7:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 99 && kind > 107)
                     kind = 107;
                  break;
               case 11:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 17:
                  if (curChar == 112 && kind > 122)
                     kind = 122;
                  break;
               case 18:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 110 && kind > 122)
                     kind = 122;
                  break;
               case 20:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 25:
                  jjAddStates(54, 55);
                  break;
               case 28:
                  if (curChar == 115)
                     jjAddStates(52, 53);
                  break;
               case 29:
                  if (curChar == 101 && kind > 120)
                     kind = 120;
                  break;
               case 30:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 35:
                  if (curChar == 109 && kind > 120)
                     kind = 120;
                  break;
               case 36:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 116)
                     jjAddStates(50, 51);
                  break;
               case 38:
                  if (curChar == 101 && kind > 107)
                     kind = 107;
                  break;
               case 39:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 43:
                  if (curChar == 114 && kind > 107)
                     kind = 107;
                  break;
               case 44:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 56:
                  if (curChar == 110)
                     jjAddStates(47, 49);
                  break;
               case 57:
                  if (curChar == 101 && kind > 119)
                     kind = 119;
                  break;
               case 58:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 60:
                  if (curChar == 109 && kind > 119)
                     kind = 119;
                  break;
               case 61:
                  if (curChar == 108 && kind > 122)
                     kind = 122;
                  break;
               case 62:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 65:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 34:
               case 27:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 59:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 64:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 41:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 67:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 42:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 5:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 126)
                     kind = 126;
                  jjCheckNAdd(27);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 25:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(54, 55);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 66 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2()
{
   return jjMoveNfa_2(3, 0);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 12;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
                  if ((0xffffffdffffffbffL & l) != 0L)
                  {
                     if (kind > 101)
                        kind = 101;
                     jjCheckNAdd(2);
                  }
                  else if (curChar == 10)
                  {
                     if (kind > 11)
                        kind = 11;
                     jjCheckNAddTwoStates(6, 7);
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(35, 40);
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAdd(2);
                  break;
               case 4:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 5:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(6, 7);
                  break;
               case 6:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(6, 7);
                  break;
               case 7:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 8:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(8, 0);
                  break;
               case 9:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(9, 10);
                  break;
               case 10:
                  if (curChar == 10 && kind > 11)
                     kind = 11;
                  break;
               case 11:
                  if (curChar != 10)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
               case 2:
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAdd(2);
                  break;
               case 1:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
               case 2:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAdd(2);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 12 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_4()
{
   return jjMoveNfa_4(3, 0);
}
private int jjMoveNfa_4(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 12;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
                  if ((0xffffffdffffffbffL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     jjCheckNAdd(2);
                  }
                  else if (curChar == 10)
                  {
                     if (kind > 11)
                        kind = 11;
                     jjCheckNAddTwoStates(6, 7);
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(35, 40);
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 128)
                     kind = 128;
                  jjCheckNAdd(2);
                  break;
               case 4:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 5:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(6, 7);
                  break;
               case 6:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(6, 7);
                  break;
               case 7:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 8:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(8, 0);
                  break;
               case 9:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(9, 10);
                  break;
               case 10:
                  if (curChar == 10 && kind > 11)
                     kind = 11;
                  break;
               case 11:
                  if (curChar != 10)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
               case 2:
                  if (kind > 128)
                     kind = 128;
                  jjCheckNAdd(2);
                  break;
               case 1:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
               case 2:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 128)
                     kind = 128;
                  jjCheckNAdd(2);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 12 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_7(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_7(int pos, long active0, long active1)
{
   return jjMoveNfa_7(jjStopStringLiteralDfa_7(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_7()
{
   switch(curChar)
   {
      case 47:
         return jjStopAtPos(0, 14);
      case 61:
         return jjStopAtPos(0, 13);
      case 72:
         return jjMoveStringLiteralDfa1_7(0x10000L);
      case 75:
         return jjMoveStringLiteralDfa1_7(0x100L);
      case 76:
         return jjMoveStringLiteralDfa1_7(0x80L);
      case 77:
         return jjMoveStringLiteralDfa1_7(0x200L);
      case 80:
         return jjMoveStringLiteralDfa1_7(0x40000L);
      case 81:
         return jjMoveStringLiteralDfa1_7(0x20000L);
      case 86:
         return jjMoveStringLiteralDfa1_7(0x100000L);
      default :
         return jjMoveNfa_7(4, 0);
   }
}
private int jjMoveStringLiteralDfa1_7(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_7(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 58:
         if ((active1 & 0x80L) != 0L)
            return jjStopAtPos(1, 71);
         else if ((active1 & 0x100L) != 0L)
            return jjStopAtPos(1, 72);
         else if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(1, 73);
         else if ((active1 & 0x10000L) != 0L)
            return jjStopAtPos(1, 80);
         else if ((active1 & 0x20000L) != 0L)
            return jjStopAtPos(1, 81);
         else if ((active1 & 0x40000L) != 0L)
            return jjStopAtPos(1, 82);
         else if ((active1 & 0x100000L) != 0L)
            return jjStopAtPos(1, 84);
         break;
      default :
         break;
   }
   return jjStartNfa_7(0, 0L, active1);
}
private int jjMoveNfa_7(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 60;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 4:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAdd(26);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAddStates(91, 97);
                  }
                  else if (curChar == 10)
                  {
                     if (kind > 11)
                        kind = 11;
                     jjCheckNAddTwoStates(53, 54);
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(1);
                  }
                  break;
               case 0:
                  if (curChar != 37)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if (curChar != 58)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAdd(3);
                  break;
               case 3:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjCheckNAdd(3);
                  break;
               case 5:
                  if (curChar != 58)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAdd(6);
                  break;
               case 6:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjCheckNAdd(6);
                  break;
               case 8:
                  if (curChar != 58)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(9);
                  break;
               case 9:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(9);
                  break;
               case 11:
                  if (curChar != 58)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(12);
                  break;
               case 12:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(12);
                  break;
               case 14:
                  if (curChar != 58)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(15);
                  break;
               case 15:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(15);
                  break;
               case 17:
                  if (curChar != 58)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAdd(18);
                  break;
               case 18:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAdd(18);
                  break;
               case 20:
                  if (curChar != 58)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(21);
                  break;
               case 21:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(21);
                  break;
               case 23:
                  if (curChar != 58)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjCheckNAdd(24);
                  break;
               case 24:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjCheckNAdd(24);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAdd(26);
                  break;
               case 27:
                  if (curChar != 58)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(28);
                  break;
               case 28:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(28);
                  break;
               case 30:
                  if (curChar != 58)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(31);
                  break;
               case 31:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(31);
                  break;
               case 33:
                  if (curChar != 58)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjCheckNAdd(34);
                  break;
               case 34:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjCheckNAdd(34);
                  break;
               case 36:
                  if (curChar != 58)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(37);
                  break;
               case 37:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(37);
                  break;
               case 39:
                  if (curChar != 58)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAdd(40);
                  break;
               case 40:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjCheckNAdd(40);
                  break;
               case 42:
                  if (curChar != 58)
                     break;
                  if (kind > 79)
                     kind = 79;
                  jjCheckNAdd(43);
                  break;
               case 43:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 79)
                     kind = 79;
                  jjCheckNAdd(43);
                  break;
               case 45:
                  if (curChar != 58)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAdd(46);
                  break;
               case 46:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjCheckNAdd(46);
                  break;
               case 49:
                  if ((0xffffffdffffffbffL & l) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 50:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAddStates(91, 97);
                  break;
               case 51:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(51, 52);
                  break;
               case 52:
                  if (curChar == 10)
                     jjCheckNAddTwoStates(53, 54);
                  break;
               case 53:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(53, 54);
                  break;
               case 54:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 55:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(55, 0);
                  break;
               case 56:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(56, 57);
                  break;
               case 57:
                  if (curChar == 10 && kind > 11)
                     kind = 11;
                  break;
               case 58:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(58);
                  break;
               case 59:
                  if (curChar != 10)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(53, 54);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 4:
                  if (curChar == 92)
                  {
                     if (kind > 85)
                        kind = 85;
                     jjCheckNAdd(49);
                  }
                  else if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 45;
                  else if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 42;
                  else if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 39;
                  else if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 36;
                  else if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 33;
                  else if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 90)
                     jjstateSet[jjnewStateCnt++] = 23;
                  else if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 20;
                  else if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 14;
                  else if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 11;
                  else if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 5;
                  else if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 1:
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (kind > 31)
                     kind = 31;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (kind > 32)
                     kind = 32;
                  jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 7:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 9:
                  if (kind > 33)
                     kind = 33;
                  jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 10:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 12:
                  if (kind > 34)
                     kind = 34;
                  jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 13:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 15:
                  if (kind > 35)
                     kind = 35;
                  jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 16:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 18:
                  if (kind > 36)
                     kind = 36;
                  jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 21:
                  if (kind > 37)
                     kind = 37;
                  jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 22:
                  if (curChar == 87)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 24:
                  if (kind > 38)
                     kind = 38;
                  jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 25:
                  if (curChar == 90)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 28:
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 29:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 31:
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 32:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 34:
                  if (kind > 76)
                     kind = 76;
                  jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 35:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 37:
                  if (kind > 77)
                     kind = 77;
                  jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 38:
                  if (curChar == 68)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 40:
                  if (kind > 78)
                     kind = 78;
                  jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 41:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 43:
                  if (kind > 79)
                     kind = 79;
                  jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 44:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 46:
                  if (kind > 83)
                     kind = 83;
                  jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 47:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 48:
                  if (curChar != 92)
                     break;
                  if (kind > 85)
                     kind = 85;
                  jjCheckNAdd(49);
                  break;
               case 49:
                  if (kind > 85)
                     kind = 85;
                  jjCheckNAdd(49);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 31)
                     kind = 31;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 9:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 12:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 15:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 18:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 21:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 24:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 28:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 31:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 34:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 37:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 40:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 43:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 79)
                     kind = 79;
                  jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 46:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 49:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  jjstateSet[jjnewStateCnt++] = 49;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 60 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   51, 0, 52, 3, 56, 57, 62, 45, 49, 37, 39, 28, 29, 7, 8, 11, 
   0, 12, 13, 14, 3, 4, 80, 81, 84, 0, 85, 86, 60, 64, 44, 48, 
   56, 74, 78, 4, 5, 8, 0, 9, 10, 48, 49, 52, 0, 53, 54, 59, 
   60, 65, 42, 46, 34, 36, 25, 26, 43, 44, 47, 0, 48, 49, 50, 53, 
   55, 56, 58, 60, 62, 64, 67, 56, 65, 57, 64, 65, 57, 34, 35, 37, 
   38, 10, 0, 11, 8, 57, 58, 61, 0, 62, 63, 51, 52, 55, 0, 56, 
   57, 58, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, "\130\72", null, null, null, null, null, 
null, "\75", "\57", null, null, "\172", "\55", "\173", "\175", null, null, 
"\136\136", "\136", "\137\137", "\137", "\47", "\54", "\57\57", "\53", null, null, null, 
null, null, null, null, null, "\113\72", "\115\72", "\126\72", "\133\115\72", 
"\133\113\72", "\133\126\72", "\121\72", "\114\72", "\133\114\72", "\120\72", "\167\72", 
"\133", "\135", "\50", "\72", null, null, "\51", "\53", null, null, null, null, null, 
"\41", "\52", "\134", null, null, null, null, null, "\114\72", "\113\72", "\115\72", 
null, null, null, null, null, null, "\110\72", "\121\72", "\120\72", null, 
"\126\72", null, null, null, null, null, null, "\174", "\134\55", "\55", "\137", "\52", 
"\176", null, "\134", null, null, null, null, null, "\156\157\156\145", "\75", 
"\143\154\145\146", null, null, "\164\162\141\156\163\160\157\163\145", 
"\155\151\144\144\154\145", "\110\120", "\110\160", null, null, null, "\135", null, null, null, null, 
"\163\164\145\155\163", null, "\55", null, null, null, null, null, null, "\135", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "TUNEBODY",
   "EATTEXT",
   "KEY_STATE",
   "EATLINE",
   "EATINLINE",
   "AW_PROCESS",
   "TUNEHEADER",
   "FIRSTHISTORY",
   "INHISTORY",
   "VOICE_STATE",
   "VOICE_TUNE_STATE",
   "VOICE_INLINE_STATE",
   "INPLUSCHORD",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, 7, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 4, 11, 5, 5, 12, -1, -1, -1, 4, 6, 
   -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 3, 2, -1, 
   -1, -1, -1, -1, -1, 8, 7, 2, -1, 10, -1, -1, -1, -1, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 7, 1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, 1, -1, 1, 
};
static final long[] jjtoToken = {
   0xffffffffffffffc1L, 0xffffff3fffffffffL, 0x7L, 
};
static final long[] jjtoSkip = {
   0x0L, 0xc000000000L, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[88];
private final int[] jjstateSet = new int[176];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public AbcParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public AbcParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 88; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 14 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   if (jjmatchedPos < 0)
   {
      if (image == null)
         curTokenImage = "";
      else
         curTokenImage = image.toString();
      beginLine = endLine = input_stream.getBeginLine();
      beginColumn = endColumn = input_stream.getBeginColumn();
   }
   else
   {
      String im = jjstrLiteralImages[jjmatchedKind];
      curTokenImage = (im == null) ? input_stream.GetImage() : im;
      beginLine = input_stream.getBeginLine();
      beginColumn = input_stream.getBeginColumn();
      endLine = input_stream.getEndLine();
      endColumn = input_stream.getEndColumn();
   }
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       if (jjmatchedPos == 0 && jjmatchedKind > 69)
       {
          jjmatchedKind = 69;
       }
       break;
     case 2:
       jjmatchedKind = 101;
       jjmatchedPos = -1;
       curPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       if (jjmatchedPos == 0 && jjmatchedKind > 127)
       {
          jjmatchedKind = 127;
       }
       break;
     case 4:
       jjmatchedKind = 128;
       jjmatchedPos = -1;
       curPos = 0;
       curPos = jjMoveStringLiteralDfa0_4();
       break;
     case 5:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_5();
       break;
     case 6:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_6();
       break;
     case 7:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_7();
       if (jjmatchedPos == 0 && jjmatchedKind > 86)
       {
          jjmatchedKind = 86;
       }
       break;
     case 8:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_8();
       break;
     case 9:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_9();
       break;
     case 10:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_10();
       if (jjmatchedPos == 0 && jjmatchedKind > 127)
       {
          jjmatchedKind = 127;
       }
       break;
     case 11:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_11();
       if (jjmatchedPos == 0 && jjmatchedKind > 127)
       {
          jjmatchedKind = 127;
       }
       break;
     case 12:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_12();
       if (jjmatchedPos == 0 && jjmatchedKind > 127)
       {
          jjmatchedKind = 127;
       }
       break;
     case 13:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_13();
       if (jjmatchedPos == 0 && jjmatchedKind > 69)
       {
          jjmatchedKind = 69;
       }
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 80 :
        image.append(jjstrLiteralImages[80]);
        lengthOfMatch = jjstrLiteralImages[80].length();
        Debug.output(1,"HISTORY - Current lex. state: "+curLexState+" image: "+image.toString());
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
